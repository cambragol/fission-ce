name: Build and deploy WebAssembly version

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  build_webassembly_version:
    name: Build WebAssembly + Deploy fissionâ€‘ce UI
    runs-on: ubuntu-latest
    permissions:
      contents: write  # needed for ghâ€‘pages action

    steps:
      - name: Checkout engine
        uses: actions/checkout@v4

      - name: Install Emscripten SDK
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install 4.0.4
          ./emsdk activate 4.0.4

      - name: Build fallout2 WASM module
        run: |
          source emsdk/emsdk_env.sh
          git config --global --add safe.directory "*"
          mkdir -p build
          cd build
          emcmake cmake ../ \
            -DCMAKE_TOOLCHAIN_FILE=../cmake/toolchain/Emscripten.cmake \
            -DCMAKE_BUILD_TYPE=Release
          emmake make -j4
          cd ..

      - name: Setup Node (for UI build)
        if: |
          github.event_name == 'push' ||
          (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Checkout fissionâ€‘ce web UI
        if: |
          github.event_name == 'push' ||
          (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)
        uses: actions/checkout@v4
        with:
          repository: cambragol/fissionâ€‘ceâ€‘ems
          ref: 8dc61ba6e8e62116f4810ffe89d0cece00f508d7
          path: fissionâ€‘ceâ€‘ems

      - name: Determine deploy paths
        if: |
          github.event_name == 'push' ||
          (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)
        id: set-path
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "DEST_DIR=PR-${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
            echo "SITE_BASE=/fissionâ€‘ce/PR-${{ github.event.pull_request.number }}/" >> $GITHUB_OUTPUT
          else
            echo "DEST_DIR=." >> $GITHUB_OUTPUT
            echo "SITE_BASE=/fissionâ€‘ce/" >> $GITHUB_OUTPUT
          fi
          cat $GITHUB_OUTPUT

      - name: Build fissionâ€‘ce web UI
        if: |
          github.event_name == 'push' ||
          (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)
        env:
          SITE_BASE:     ${{ steps.set-path.outputs.SITE_BASE }}
          PUBLIC_URL:    ${{ steps.set-path.outputs.SITE_BASE }}
          F2_WEB_INFO:   Web=${{ github.event.pull_request.head.sha || github.sha }}
          F2_GAME_VERSION: Game=${{ github.event.pull_request.head.sha || github.sha }}
        run: |
          cd fissionâ€‘ceâ€‘ems
          npm ci
          # Copy the freshly built engine artifacts into the UI assets folder
          cp ../build/fallout2-ce.js  src/assets/fallout2ce/
          cp ../build/fallout2-ce.wasm src/assets/fallout2ce/
          npm run build

      - name: Deploy to GitHub Pages
        if: |
          github.event_name == 'push' ||
          (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch:      gh-pages
          folder:      fissionâ€‘ceâ€‘ems/dist
          target-folder: ${{ steps.set-path.outputs.DEST_DIR }}
          clean:       false
          single-commit: true

      - name: Comment Preview URL on PR
        if: |
          github.event_name == 'pull_request' &&
          github.event.pull_request.head.repo.full_name == github.repository
        run: |
          gh pr comment ${{ github.event.pull_request.number }} \
            --body "ðŸš€ WebAssembly PR Preview is available at: https://${{ github.repository_owner }}.github.io/fissionâ€‘ce/PR-${{ github.event.pull_request.number }}/"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
